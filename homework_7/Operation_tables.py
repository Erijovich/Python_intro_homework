import my_functions as mf
import os

def create_operation_table(fn, rows=6, cols=6):
    if not 1 < rows < 21: rows = 6 
    if not 1 < cols < 21: cols = 6 # –∑–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–µ–≤—ã—à–∞—é—â–∏—Ö
    return [[fn(i+1,j+1) for j in range(cols)] for i in range(rows)]
    
def print_table(table):
    print()
    for row in table:
        for num in row: 
            print('{:^4}'.format(num), end=' ')
        print()
    print()

def input_conditions():
    print(msg['make'])
    rows, cols = mf.input_int(msg['rows']), mf.input_int(msg['cols'])
    counter = 0
    while True:
        print(msg['operations'], *oper_shop.keys())
        operation = input(msg['op_choise'])
        if operation in oper_shop:  # –∫–∞–ª–µ–Ω–¥–∞—Ä—å, —Ä–µ–º–Ω–∏, –Ω–æ–∂–∏
            return create_operation_table(oper_shop[operation], rows, cols)
        counter +=1
        print(msg['error'] if counter%3 != 0 else msg['megaerror'])

def start():
    print(msg['intro'])
    while True:
        print_table(input_conditions())
        if input(msg['again']) != '1': return
        os.system('cls')

# –º–æ–∂–Ω–æ –ª–∏ –∫–ª—é—á –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å –≤ —Ñ–æ—Ä–º—É–ª—É? —Ç–æ–≥–¥–∞ –Ω–µ —Å–ª–æ–≤–∞—Ä—å , –∞ —Å–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Ç–æ–º —Ñ–æ—Ä–º—É–ª—É –¥–µ–ª–∞–µ—Ç
oper_shop = {'+': lambda x, y: x+y,
             '-': lambda x, y: x-y,
             '*': lambda x, y: x*y,
             '/': lambda x, y: x/y,
             '//': lambda x, y: x//y,
             '%': lambda x, y: x%y,
             '**': lambda x, y: x**y}

msg = {'intro': '\n–°–∏–µ –Ω–µ—á—Ç–æ –≤—ã–≤–æ–¥–∏—Ç —Ç–∞–±–ª–∏—Ü—É –±–∏–Ω–∞—Ä–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π',
       'make': '–ó–∞–¥–∞–π —Ä–∞–∑–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é',
       'rows': '–£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: ',
       'cols': '–£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤: ',
       'operations': '–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –±–∏–Ω–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: ',
       'op_choise': '–í—ã–±–µ—Ä–∏ –æ–ø–µ—Ä–∞—Ü–∏—é: ',
       'error': '–ù–µ—Ç —Ç–∞–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ üòê –°–º–æ—Ç—Ä–∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ ‚òù',
       'again': '–ü–æ–≤—Ç–æ—Ä–∏–º? –ñ–º–∏ 1 –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è, –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –≤–≤–æ–¥ - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: ',
       'bye': '–ü–æ–∫–µ–¥–∞! ‚úå',
       'megaerror': '\nüò° üò° üò°  –¢—ã –∏–∑–¥–µ–≤–∞–µ—à—å—Å—è —á—Ç–æ –ª–∏???  üëâüò£\n'
      }


start()



#################################################################
#######---> ----------------------------------------- <---#######
####---->>> –ü–æ–¥–≤–∞–ª –Ω–µ –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã—Ö –∏–ª–∏ –Ω–µ —É–¥–∞—á–Ω—ã—Ö –∏–¥–µ–π <<<----####
#######---> ----------------------------------------- <---#######
#################################################################



def create_operation_table_boring(operation, rows=6, cols=6):
    table = [[0]*cols for i in range(rows)]
    # print(table)
    for i in range(rows):
        for j in range(cols):
            table[i][j] = operation(i+1,j+1)
    return table

def print_table_wtf(table):
    # l = 1 + len(str(max(max(table)))) # –≤—ã—á–∏—Å–ª–∏—è–µ–º —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.. —Å –º–∏–Ω—É—Å–∞–º–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç.. 
    # # –Ω–µ —Ç–∞–∫, —Ç—É—Ç –ø—Ä–æ—â–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤ –º–æ–Ω–æ—Å–ø–∏—Å–æ–∫ –∏ —Ç–æ–≥–¥–∞ —É–∂–µ –Ω–∞–π—Ç–∏ —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —á–∏—Å–ª–æ
    # print(l)
    output = '{:^5}' # –∫–∞–∫ –Ω–∞ –ª–µ—Ç—É –º–µ–Ω—è—Ç—å –¥–ª–∏–Ω—É –ø–æ–ª—è????
    for row in table:
        for num in row: 
            print(output.format(num), end='')
        print()

